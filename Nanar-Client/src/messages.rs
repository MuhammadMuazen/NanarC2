/*
    This file holds all the messages that are going to be exchagned between
    the server and the client and the messages for the error in the connection.
*/


// Messages
pub const CHECK_SERVER_MSG: &[u8] = "CHECK_SERVER_MSG".as_bytes();
pub const SERVER_IS_UP_MSG: &[u8] = "SERVER_IS_UP_MSG".as_bytes();
pub const KEY_EXCHANGE_SUCCEEDED_MSG: &[u8] = "KEY_EXCHANGE_SUCCEEDED_MSG".as_bytes();
pub const KEY_EXCHANGE_FAILED_MSG: &[u8] = "KEY_EXCHANGE_FAILED_MSG".as_bytes();
pub const HEARTBEAT_RETRY_INIT_CONNECTION_MSG: &[u8] = "HEARTBEAT_RETRY_INIT_CONNECTION_MSG".as_bytes();
pub const HEARTBEAT_SUCCESS_RESPONSE_MSG: &[u8] = "HEARTBEAT_SUCCESS_RESPONSE_MSG".as_bytes();
pub const HEARTBEAT_NO_ACTION_MSG: &[u8] = "HEARTBEAT_NO_ACTION_MSG".as_bytes();
pub const HEARTBEAT_NO_ACTION_RESPONSE_MSG: &[u8] = "HEARTBEAT_NO_ACTION_RESPONSE_MSG".as_bytes();

// Reasons to call the heartbeat function
pub const MISCONNECTION_OR_MISCOMMUNICATION: &str = "MICSONNECTION_OR_MISCOMMUNICATION";
pub const HEARTBEAT_NO_ACTION: &str = "HEARTBEAT_NO_ACTION";

// Change this for the generated ID:Hash from the server
pub const INIT_CONNECTION_PASS: &str = "WHAT";
// Commands communication password. Generated by the server then added here
pub const COMMANMD_COMMUNICATION_SECRET: &str = "32-byte-key-for-AES-256-encrypti";
pub const NONCE: &str = "my_unique_ce";